cornnit.model<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, fat)
summary(cornnit.model)
anova(cornnit.model)
cornnit.model<-lm(yield~nitrogen, cornnit)
summary(cornnit.model)
summary(cornnit.model)
anova(cornnit.model)
cornnit['predicted']=coef(cornnit.model)[1] + (coef(cornnit.model)[2]*(cornnit$nitrogen)) chisq.test(cornnit$yield, cornnit$predicted)
cornnitmodel<-lm(yield~nitrogen, cornnit)
summary(cornnitmodel)
summary(cornnitmodel)
anova(cornnitmodel)
cornnit['predicted']=coef(cornnitmodel)[1] + (coef(cornnitmodel)[2]*(cornnit$nitrogen)) chisq.test(cornnit$yield, cornnit$predicted)
cornnit['predicted']=coef(cornnitmodel)[1] + (coef(cornnitmodel)[2]*(cornnit$nitrogen))
chisq.test(cornnit$yield, cornnit$predicted)
library(MASS)
boxcox(model1, lambda=seq(2.5,3,by=0.1))
boxcox(model1, lambda=seq(2.5,3,by=0.1))
transformed<-((cornnit$yield^(2.725)-1)/2.725)
cornnitmodelupdate<-lm(transformed~cornnit$nitrogen)
summary(cornnitmodelupdate)
anova(cornnitmodelupdate)
cornnit['predicted']=coef(cornnitmodelupdate)[1] + (coef(cornnitmodelupdate)[2]*(cornnit$nitrogen))
chisq.test(cornnit$yield, cornnit$predicted)
coef(cornnitmodelupdate)[1]
coef(cornnitmodel)[1]
coef(cornnitmodel)[2]*(cornnit$nitrogen)
coef(cornnitmodelupdate)[2]*(cornnit$nitrogen)
cornnit['predicted']
cornnitmodel<-lm(yield~nitrogen, cornnit)
summary(cornnitmodel)
summary(cornnitmodel)
anova(cornnitmodel)
cornnit['predicted']=coef(cornnitmodel)[1] + (coef(cornnitmodel)[2]*(cornnit$nitrogen))
cornnit['predicted']
cornnit['predicted']=coef(cornnitmodelupdate)[1] + (coef(cornnitmodelupdate)[2]*(cornnit$nitrogen))
cornnit['predicted']
cornnitmodel<-lm(yield~nitrogen, cornnit)
summary(cornnitmodel)
anova(cornnitmodel)
cornnit['predicted']=coef(cornnitmodel)[1] + (coef(cornnitmodel)[2]*(cornnit$nitrogen))
chisq.test(cornnit$yield, cornnit$predicted)
library(MASS)
boxcox(model1, lambda=seq(2.5,3,by=0.1))
transformed<-((cornnit$yield^(2.725)-1)/2.725)
cornnitmodelupdate<-lm(transformed~cornnit$nitrogen)
summary(cornnitmodelupdate)
anova(cornnitmodelupdate)
cornnit['predicted']=coef(cornnitmodelupdate)[1] + (coef(cornnitmodelupdate)[2]*(cornnit$nitrogen))
chisq.test(cornnit$yield, cornnit$predicted)
model<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, fat)
updatedmod<-lm(gamble~sex+status+income+verbal,teengamb, subset=(observation != "24"))
a<-summary(model)
b<-summary(updatedmod)
a$coefficients
b$coefficients
observation<-row.names(teengamb)
cooksdist<-cooks.distance(model)
halfnorm(cooksdist, 3, labs = observation, ylab = "Cook's distance")
Y<-c(51.5, 49.2, 41.9, 51.3, 43.7, 34, 48.9, 41.6, 63.8, 40.1)
x1<-c(3.2,3.1,2,3.2,3.2,1.3, 3.7,3.6,4.6,2.4)
x2<-c(7.9,7.5,7.8,6.5,6.5,9.4,7.0,6.7,8,7.5)
ones<-rep(1,10)
mod<-lm(Y~x1+x2)
hatvalues(mod)[10]
tmat<-matrix(c(ones,x1, x2), nrow=10)
tmatHAT<-tmat%*%solve(t(tmat)%*%tmat)%*%t(tmat)
tmatHAT[,10]%*%tmatHAT[10,]
summary(fatmodel)$r.squared
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, fat)
summary(fatmodel)$r.squared
t = seq(10,252,by=10) #index of every 10th obs
test = fat[t,]
tr = fat[-t,] #treatment data
rmse <- function(x,y) sqrt(mean((x-y)^2))
rmse <- function(x,y) sqrt(mean((x-y)^2))
train<-lm(siri~ age +weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps +forearm+wrist, tr)
rmse(train$fit, tr$siri)
pred<- predict(train, test) y10<-test$siri
rmse(pred, y10)
pred<- predict(train, test)
y10<-test$siri
rmse(pred, y10)
library(faraway)
model<-lm(total~expend+salary+ratio+takers, sat)
states<-row.names(sat)
influence<-influence(model)
halfnorm(influence$hat, labs=states, ylab="Hat Values")
cooksd <- cooks.distance(model)
halfnorm(cook, 3, labs = states, ylab = "Cook's distance")
summary(lm(total~expend+salary+ratio+takers, sat, subset=(states != "Utah")))$coefficients
summary(model)$coefficients
halfnorm(influence$hat, labs=states, ylab="Hat Values")
influence<-influence(teengambmodel)
teengambmodel<-lm(gamble~sex+status+income+verbal, teengamb)
influence<-influence(teengambmodel)
halfnorm(influence$hat,ylab="leverage")
observation<-row.names(teengamb)
cooksdist<-cooks.distance(teengambmodel)
halfnorm(cooksdist, 3, labs = observation, ylab = "Cook's distance")
hatvalues(lm(Y~x1+x2))[10]
outlierTest(teengambmodel)
library(car)
outlierTest(teengambmodel)
outlierTest(satmodel)
satmodel<-lm(total~expend+salary+ratio+takers, sat)
outlierTest(satmodel)
boxcox(cornnitmodel, lambda=seq(2.5,3,by=0.1))
summary(cornnitmodel)$r.squared
summary(cornnitmodelupdate)$r.squared
summary(cornnitmodel)$sigma
summary(cornnitmodelupdate)$sigma
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
t<-seq(10,252,by=10)
test.data<-fat[t,]
training.data<-fat[-t,]
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
predict(fatmodel, newdata=new.data2, interval='confidence')
predict(fatmodel, newdata=test.data, interval='confidence')
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
predictions<-predict(fatmodel, newdata=test.data, interval='confidence')
modelperformance <-cbind(predictions, test.data$siri)
modelperformance
modelperformance <-cbind(predictions$fit, test.data$siri)
predictions[,1]
modelperformance <-cbind(predictions[,1], test.data$siri)
modelperformance
mean(predictions[,1]-test.data$siri)
modelperformance <-cbind(predictions[,1], test.data$siri)
colnames(modelperformance)<-('Predicted value','True Value')
modelperformance
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
ridgemodel<-lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
predictions<-predict(ridgemodel, newdata=test.data, interval='confidence')
ridgemodel
install.packages("lmridge")
library(lmridge)
predictions<-predictlmridge(ridgemodel, newdata=test.data, interval='confidence')
predictions<-predict.lmridge(ridgemodel, newdata=test.data, interval='confidence')
predictions<-predict(fatmodel, newdata=test.data)
predictions<-predict.lmridge(ridgemodel, data=test.data)
ridgemodel<-lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
library(lmridge)
predictions<-predict.lmridge(ridgemodel, data=test.data)
predictions<-predict.lmridge(ridgemodel, newdata=test.data)
ridgemodel
class(ridgemodel)
ridgemodel<-lmridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
library(lmridge)
predictions<-predict.lmridge(ridgemodel, newdata=test.data)
modelperformance <-cbind(predictions[,1], test.data$siri)
predictions
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions[,1]-test.data$siri)
mean(predictions-test.data$siri)
predictions<-predict.lmridge(ridgemodel, newdata=test.data)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions-test.data$siri)
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
predictions<-predict(fatmodel, newdata=test.data)
modelperformance <-cbind(predictions[,1], test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions[,1]-test.data$siri)
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
predictions<-predict(fatmodel, newdata=test.data)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions-test.data$siri)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda = seq(0, 5e-8, len=21))
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
rgmod
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
rgmod$lambda
coef(rgmod)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, seq(0, 5e-8, len=21))
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0, 5e-8, len=21))
rgmod$lambda
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0, 5e-12, len=21))
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0, 5e-45, len=21))
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0, 5e-545, len=21))
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0, 5e-145, len=21))
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0, 5e-145, len=210))
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
rgmod <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0,10,1e-4))
matplot(rgmod$lambda, coef(rgmod), type="l", xlab=expression(lambda) ,ylab=expression(hat(beta)),col=1)
coef(ridgemod)
coef(ridgemodel)
cbind(1, as.matrix(test.data))%*%coef(ridgemodel)
test.data
test.data[-3,]
test.data[-,3]
test.data[-,3]
test.data[,-3]
rem<-c(1,2,3)
test.data[,-rem]
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions-test.data$siri)
predictions
predictions<-predict(fatmodel, newdata=test.data)
predictions
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data, lambda=seq(0,10,1e-4))
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
modelperformance <-cbind(predictions, test.data$siri)
coef(ridgemodel)
ridgemodel
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
ridgemodel
fatmodel
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=(1e-4))
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions-test.data$siri)
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=(1e-2))
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions-test.data$siri)
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=(1))
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions-test.data$siri)
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=seq(0,10,1e-4))
select(ridgemodel)
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=0.0467)
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
mean(predictions-test.data$siri)
rmse(predictions,test.data$siri)
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=0.0467)
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
rmse(predictions,test.data$siri)
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
predictions<-predict(fatmodel, newdata=test.data)
modelperformance <-cbind(predictions, test.data$siri)
colnames(modelperformance)<-c('Predicted value','True Value')
modelperformance
rmse(predictions,test.data$siri)
require(lars)
install.packages("lars")
library(lars)
training.data
training.data[,-remove]
training.data<-training.data[,-remove]
t<-seq(10,252,by=10)
test.data<-fat[t,]
training.data<-fat[-t,]
training.data1<-training.data[,-remove]
lars(as.matrix(training.data),training.data$siri)
lassomod<-lars(as.matrix(training.data),training.data$siri)
plot(lassomod)
?plot
?plot
?plot
plot(lassomod,ylim=c(0,10))
plot(lassomod,ylim=c(-100,100),xlim=c(0,20))
lassomod<-lars(as.matrix(training.data),training.data$siri)
lassomod
plot(lassomod,ylim=c(0,100),xlim=c(0,20))
plot(lassomod,ylim=c(0,100),xlim=c(0,2))
cv.lars(as.matrix(training.data),training.data$siri)
cvout<-cv.lars(as.matrix(training.data),training.data$siri)
cvout$index[which.min(cvout$cv)]
predlars <- predict(lassomod,adjusteddata,s=1,mode="fraction")
lassomod
adjusteddata
cvout
predlars <- predict(lassomod,adjusteddata,s=0.98989899,mode="fraction")
predlars <- predict(lassomod,test,data,s=0.98989899,mode="fraction")
?predict
predlars <- predict(lassomod,test.data,s=0.98989899,mode="fraction")
predlars
rmse(test.data$siri,predlars$fit)
cbind(test.data$siri,predlars$fit)
predlars <- predict(lassomod,test.data,s=0.999999999,mode="fraction")
cbind(test.data$siri,predlars$fit)
cv.lars(as.matrix(training.data),training.data$siri)
cvout
predict.lars(lassomod,test.data,2,mode="fraction")
predict.lars(lassomod,test.data,c(.1,.2,.3,.4,.5,.6),mode="fraction")
predict.lars(lassomod,test.data,c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1),mode="fraction")
rmse(predlars$fit,test.data$siri)
rmse(predlars$fit[1],test.data$siri)
cvout
data.frame(training.data, row.names = 10)
training.data
data.frame(training.data, row.names = seq(1:227)
lassomod<-lars(as.matrix(training.data),training.data$siri)
cvout<-cv.lars(as.matrix(training.data),training.data$siri)
predlars<-predict.lars(lassomod,test.data,c(.1,.2,.3,.4,.5,.6,.7,.8,.9,1),mode="fraction")
cbind(test.data$siri,predlars$fit)
rmse(predlars$fit[1],test.data$siri)
data.frame(training.data, row.names = seq(1:227))
remove<-c(1,2,3)
adjustedtraindata<-training.data[,-remove]
data.frame(training.data, row.names = seq(1:227))
newdata.frame(training.data, row.names = seq(1:227))
new<-data.frame(training.data, row.names = seq(1:227))
new
new<-data.frame(adjustedtraindata, row.names = seq(1:227))
new
lars(as.matrix(adjustedtraindata),training.data$siri)
lars(as.matrix(adjustedtraindata),training.data$siri)
cvout<-cv.lars(as.matrix(adjustedtraindata),training.data$siri)
cvout
cvlmod$index[which.min(cvlmod$cv)]
cvout$index[which.min(cvout$cv)]
lassomod<-lars(as.matrix(adjustedtraindata),training.data$siri)
cvout<-cv.lars(as.matrix(adjustedtraindata),training.data$siri)
cvout$index[which.min(cvout$cv)]
predlars<-predict.lars(lassomod,test.data,0.7878788,mode="fraction")
cbind(test.data$siri,predlars$fit)
test.data
adjusteddata
predlars<-predict.lars(lassomod,adjusteddata,0.7878788,mode="fraction")
rmse(predlars$fit,test.data$siri)
rmse(predlars$fit,test.data$siri)
rmse
cvout<-cv.lars(as.matrix(adjustedtraindata),training.data$siri)
cvout$index[which.min(cvout$cv)]
library(lars)
training.data1<-training.data[,-remove]
remove<-c(1,2,3)
adjustedtraindata<-training.data[,-remove]
new<-data.frame(adjustedtraindata, row.names = seq(1:227))
lassomod<-lars(as.matrix(adjustedtraindata),training.data$siri)
cvout<-cv.lars(as.matrix(adjustedtraindata),training.data$siri)
cvout$index[which.min(cvout$cv)]
Y<-c(51.5, 49.2, 41.9, 51.3, 43.7, 34, 48.9, 41.6, 63.8, 40.1)
x1<-c(3.2,3.1,2,3.2,3.2,1.3, 3.7,3.6,4.6,2.4)
x2<-c(7.9,7.5,7.8,6.5,6.5,9.4,7.0,6.7,8,7.5)
hatvalues(lm(Y~x1+x2))[10] # answer with function
ones<-rep(1,10)
tmat<-matrix(c(ones,x1, x2), nrow=10)
tmatHAT<-tmat%*%solve(t(tmat)%*%tmat)%*%t(tmat)
tmatHAT[,10]%*%tmatHAT[10,] #the answer doing the math
library(faraway)
satmodel<-lm(total~expend+salary+ratio+takers, sat)
states<-row.names(sat)
influence<-influence(satmodel)
halfnorm(influence$hat, labs=states, ylab="Hat Values")
summod<-summary(satmodel)
jacknife<-rstudent(satmodel)
outlier<-jacknife[which.max(abs(jacknife))]
bonferroni<-abs(qt(.05, 45))
outlier > abs(bonferroni)
library(car)
outlierTest(satmodel)
cooksd <- cooks.distance(satmodel)
halfnorm(cooksd, 3, labs = states, ylab = "Cook's distance")
summary(lm(total~expend+salary+ratio+takers, sat, subset=(states != "Utah")))$coefficients
summary(satmodel)$coefficients
teengambmodel<-lm(gamble~sex+status+income+verbal, teengamb)
influence<-influence(teengambmodel)
halfnorm(influence$hat,ylab="leverage")
jack.knife<-rstudent(teengambmodel)
outlier<-jack.knife[which.max(abs(jack.knife))]
bonferroni<-abs(qt(.05, 42))
outlier>abs(bonferroni)
outlierTest(teengambmodel)
observation<-row.names(teengamb)
cooksdist<-cooks.distance(teengambmodel)
halfnorm(cooksdist, 3, labs = observation, ylab = "Cook's distance")
updatedteengambmodel<-lm(gamble~sex+status+income+verbal,teengamb, subset=(observation != "24"))
summary(teengambmodel)$coefficients
summary(updatedteengambmodel)$coefficients
cornnitmodel<-lm(yield~nitrogen, cornnit)
library(MASS)
boxcox(cornnitmodel, lambda=seq(2.5,3,by=0.1))
transformed<-((cornnit$yield^(2.725)-1)/2.725)
cornnitmodelupdate<-lm(transformed~cornnit$nitrogen)
summary(cornnitmodel)$r.squared
summary(cornnitmodelupdate)$r.squared
summary(cornnitmodel)$sigma
summary(cornnitmodelupdate)$sigma
t<-seq(10,252,by=10)
test.data<-fat[t,]
training.data<-fat[-t,]
rmse <- function(x,y) sqrt(mean((x-y)^2)) #function from Faraway
fatmodel<-lm(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data)
predictions<-predict(fatmodel, newdata=test.data)
rmse(predictions,test.data$siri)
require(MASS)
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=seq(0,10,1e-4))
select(ridgemodel)
ridgemodel <- lm.ridge(siri~age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+
knee+ankle+biceps+forearm+wrist, training.data,lambda=0.0467)
remove<-c(1,2,3)
adjusteddata<-test.data[,-remove]
predictions<-cbind(1, as.matrix(adjusteddata))%*%coef(ridgemodel)
rmse(predictions,test.data$siri)
library(lars)
training.data1<-training.data[,-remove]
remove<-c(1,2,3)
adjustedtraindata<-training.data[,-remove]
new<-data.frame(adjustedtraindata, row.names = seq(1:227))
lassomod<-lars(as.matrix(adjustedtraindata),training.data$siri)
cvout<-cv.lars(as.matrix(adjustedtraindata),training.data$siri)
cvout$index[which.min(cvout$cv)]
predlars<-predict.lars(lassomod,adjusteddata,0.7878788,mode="fraction")
rmse(predlars$fit,test.data$siri)
cvout
cvout$index[which.min(cvout$cv.error)] # we are checking which index has the lowest
install.packages("stargazer")
stargazer(summary(teengambmodel)$coefficients)
library(stargazer)
stargazer(summary(teengambmodel)$coefficients)
stargazer(summary(updatedteengambmodel)$coefficients)
stargazer(summary(lm(total~expend+salary+ratio+takers, sat, subset=(states != "Utah")))$coefficients)
stargazer(summary(satmodel)$coefficients)
stargazer(outlierTest(satmodel))
stargazer(summary(satmodel)$coefficients)
summary(satmodel)$coefficients
summary(lm(total~expend+salary+ratio+takers, sat, subset=(states != "Utah")))$coefficients
summary(teengambmodel)$coefficients)
summary(teengambmodel)$coefficients
summary(updatedteengambmodel)$coefficients
tmat<-matrix(c(rep(1,10),c(3.2,3.1,2,3.2,3.2,1.3, 3.7,3.6,4.6,2.4), xc(7.9,7.5,7.8,6.5,6.5,9.4,7.0,6.7,8,7.5)), nrow=10)
tmat<-matrix(c(rep(1,10),c(3.2,3.1,2,3.2,3.2,1.3, 3.7,3.6,4.6,2.4), c(7.9,7.5,7.8,6.5,6.5,9.4,7.0,6.7,8,7.5)), nrow=10)
tmatHAT<-tmat%*%solve(t(tmat)%*%tmat)%*%t(tmat)
tmatHAT[,10]%*%tmatHAT[10,] #the answer doing the math
c(summary(cornnitmodel)$r.squared,summary(cornnitmodelupdate)$r.squared)
modelmatrix<-matrix(c(rep(1,10),c(3.2,3.1,2,3.2,3.2,1.3, 3.7,3.6,4.6,2.4),
c(7.9,7.5,7.8,6.5,6.5,9.4,7.0,6.7,8,7.5)))
hatmatrix<-modelmatrix%*%solve(t(modelmatrix)%*%modelmatrix)%*%t(modelmatrix)
hatmatrix[,10]%*%hatmatrix[10,] #the answer doing the math
modelmatrix
modelmatrix<-cbind(c(rep(1,10),c(3.2,3.1,2,3.2,3.2,1.3, 3.7,3.6,4.6,2.4),
c(7.9,7.5,7.8,6.5,6.5,9.4,7.0,6.7,8,7.5)))
hatmatrix<-modelmatrix%*%solve(t(modelmatrix)%*%modelmatrix)%*%t(modelmatrix)
hatmatrix[,10]%*%hatmatrix[10,] #the answer doing the math
modelmatrix
modelmatrix<-matrix(c(rep(1,10),c(3.2,3.1,2,3.2,3.2,1.3,3.7,3.6,4.6,2.4),
c(7.9,7.5,7.8,6.5,6.5,9.4,7.0,6.7,8,7.5)),nrow=10)
hatmatrix<-modelmatrix%*%solve(t(modelmatrix)%*%modelmatrix)%*%t(modelmatrix)
hatmatrix[,10]%*%hatmatrix[10,] #the answer doing the math
queens<-c("blair","Kal","mayhem","monique","vanessa","yuhua")
sample(queens,6,replace=F)
queens<-c("blair","Kal","mayhem","monique","vanessa","yuhua")
sample(queens,6,replace=F)
queens<-c("blair","Kal","mayhem","monique","vanessa","yuhua")
sample(queens,6,replace=F)
