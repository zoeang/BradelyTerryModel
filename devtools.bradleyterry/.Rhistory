current.code<-as.package("bradleyterry")
load_all(current.code)
document(current.code)
test(current.code)
lambda<-data.frame(c(10:1),runif(10))
colnames(lambda)<-c('DocId', 'Lambda')
dataset
id<-rep(1:10)
id
bradleyterry<-function(a,b,id,lambda,dataset){
outputdata<-NULL
for (i in id){
subsetdata<-dataset[dataset$DocIDi %in% i,]
newlambda<-lambda[lambda$DocId %in% i,]
sumvec<-NULL
lambdavec<-NULL
for(i in subsetdata$DocIDj){
lambdavec<-c(lambdavec,lambda$Lambda[i])
}
for (i in 1:nrow(subsetdata)){
sumunit<-(1/(newlambda$Lambda+lambdavec[i]))
sumvec<-as.vector(c(sumvec,sumunit))
}
summationterm<-sum(sumvec)
output<-(a-1+sum(subsetdata$Choose))/(b+summationterm)
outputdata<-c(outputdata,output)}
output<-cbind(id,outputdata)
return(output)
}
bradleyterry(1,1,id,lambda,dataset)
bradleyterry<-function(a,b,id,lambda,dataset){
updatedlambda<-NULL
for (i in id){
subsetdata<-dataset[dataset$DocIDi %in% i,]
newlambda<-lambda[lambda$DocId %in% i,]
sumvec<-NULL
lambdavec<-NULL
for(i in subsetdata$DocIDj){
lambdavec<-c(lambdavec,lambda$Lambda[i])
}
for (i in 1:nrow(subsetdata)){
sumunit<-(1/(newlambda$Lambda+lambdavec[i]))
sumvec<-as.vector(c(sumvec,sumunit))
}
summationterm<-sum(sumvec)
output<-(a-1+sum(subsetdata$Choose))/(b+summationterm)
updatedlambda<-c(updatedlambda,output)}
output<-cbind(id,outputdata)
return(output)
}
bradleyterry(1,1,id,lambda,dataset)
bradleyterry<-function(a,b,id,lambda,dataset){
updatedlambda<-NULL
for (i in id){
subsetdata<-dataset[dataset$DocIDi %in% i,]
newlambda<-lambda[lambda$DocId %in% i,]
sumvec<-NULL
lambdavec<-NULL
for(i in subsetdata$DocIDj){
lambdavec<-c(lambdavec,lambda$Lambda[i])
}
for (i in 1:nrow(subsetdata)){
sumunit<-(1/(newlambda$Lambda+lambdavec[i]))
sumvec<-as.vector(c(sumvec,sumunit))
}
summationterm<-sum(sumvec)
output<-(a-1+sum(subsetdata$Choose))/(b+summationterm)
updatedlambda<-c(updatedlambda,output)}
output<-cbind(id,updatedlambda)
return(output)
}
bradleyterry(1,1,id,lambda,dataset)
lambda
bradleyterry<-function(a,b,id,lambda,dataset){
updatedlambda<-NULL
for (i in id){
subsetdata<-dataset[dataset$DocIDi %in% i,]
newlambda<-lambda[lambda$DocId %in% i,]
sumvec<-NULL
lambdavec<-NULL
for(i in subsetdata$DocIDj){
lambdavec<-c(lambdavec,lambda$Lambda[i])
}
for (i in 1:nrow(subsetdata)){
sumunit<-(1/(newlambda$Lambda+lambdavec[i]))
sumvec<-as.vector(c(sumvec,sumunit))
}
summationterm<-sum(sumvec)
output<-(a-1+sum(subsetdata$Choose))/(b+summationterm)
updatedlambda<-c(updatedlambda,output)}
output<-cbind(id,updatedlambda)
output<-as.data.frame(output)
colnames(output)<-c('DocId','Lambda')
return(output)
}
bradleyterry(1,1,id,lambda,dataset)
id
bradleyterry<-function(a,b,id,lambda,dataset){
subsetdata<-dataset[dataset$DocIDi %in% id,]
newlambda<-lambda[lambda$DocId %in% id,]
sumvec<-NULL
lambdavec<-NULL
for(i in subsetdata$DocIDj){
lambdavec<-c(lambdavec,lambda$Lambda[i])
}
for (i in 1:nrow(subsetdata)){
sumunit<-(1/(newlambda$Lambda+lambdavec[i]))
sumvec<-as.vector(c(sumvec,sumunit))
}
summationterm<-sum(sumvec)
output<-(a-1+sum(subsetdata$Choose))/(b+summationterm)
return(output)
}
lambda
bradleyterry(1,1,1,lambda,dataset)
iterative.bt<-function(a,b,id,lambda,dataset, iterations){
for (i in 1:iterations){
lambda<-bradleyterry(a,b,id,lambda,dataset)}
output(lambda)
}
id<-rep(1:10)
lambda
bradleyterry<-function(a,b,id,lambda,dataset){
updatedlambda<-NULL
for (i in id){
subsetdata<-dataset[dataset$DocIDi %in% i,]
newlambda<-lambda[lambda$DocId %in% i,]
sumvec<-NULL
lambdavec<-NULL
for(i in subsetdata$DocIDj){
lambdavec<-c(lambdavec,lambda$Lambda[i])
}
for (i in 1:nrow(subsetdata)){
sumunit<-(1/(newlambda$Lambda+lambdavec[i]))
sumvec<-as.vector(c(sumvec,sumunit))
}
summationterm<-sum(sumvec)
output<-(a-1+sum(subsetdata$Choose))/(b+summationterm)
updatedlambda<-c(updatedlambda,output)}
output<-cbind(id,updatedlambda)
output<-as.data.frame(output)
colnames(output)<-c('DocId','Lambda')
return(output)
}
bradleyterry(1,1,id,lambda,dataset)
iterative.bt(1,1,id,lambda,dataset,1)
iterative.bt<-function(a,b,id,lambda,dataset, iterations){
for (i in 1:iterations){
lambda<-bradleyterry(a,b,id,lambda,dataset)}
return(lambda)
}
bradleyterry(1,1,id,lambda,dataset)
iterative.bt(1,1,id,lambda,dataset,1)
iterative.bt(1,1,id,lambda,dataset,2)
newlambda<-bradleyterry(1,1,id,lambda,dataset)
bradleyterry(1,1,id,newlambda,dataset)
bradleyterry(1,1,id,newlambda1,dataset)
newlambda1<-bradleyterry(1,1,id,newlambda,dataset)
bradleyterry(1,1,id,newlambda1,dataset)
iterative.bt(1,1,id,lambda,dataset,3)
iterative.bt(1,1,id,lambda,dataset,25)
iterative.bt(1,1,id,lambda,dataset,28)
iterative.bt(1,1,id,lambda,dataset,50)
id<-seq(1:10)
id
setwd("/Users/benjaminschneider/Documents/GitHub/BradelyTerryModel/devtools.bradleyterry")
current.code<-as.package("bradleyterry")
load_all(current.code)
document(current.code)
bradleyterry(1,1,1,newlambda1,dataset)
iterative.bt(1,1,id,lambda,dataset,150)
iterative.bt(1,1,id,lambda,dataset,15)
dataset
lambda
iterative.bt(1,1,id,lambda,dataset,15)
iterative.bt(1,1,id,lambda,dataset,20)
iterative.bt(1,1,id,lambda,dataset,1)
bradleyterry.multid<-function(a,b,id,lambda,dataset){
updatedlambda<-NULL
for (i in id){
newlambda<-bradleyterry(a,b,i,lambda,dataset)
updatedlambda<-c(updatedlambda,newlambda)
}
output<-cbind(id,updatedlambda)
output<-as.data.frame(output)
colnames(output)<-c('DocId','Lambda')
return(output)
}
id<-rep(1:10)
id<-rep(1:10)
bradleyterry.multid(1,1,id,lambda,dataset)
bradleyterry<-function(a,b,id,lambda,dataset){
subsetdata<-dataset[dataset$DocIDi %in% id,]
newlambda<-lambda[lambda$DocId %in% id,]
sumvec<-NULL
lambdavec<-NULL
for(i in subsetdata$DocIDj){
lambdavec<-c(lambdavec,lambda$Lambda[i])
}
for (i in 1:nrow(subsetdata)){
sumunit<-(1/(newlambda$Lambda+lambdavec[i]))
sumvec<-as.vector(c(sumvec,sumunit))
}
summationterm<-sum(sumvec)
output<-(a-1+sum(subsetdata$Choose))/(b+summationterm)
return(output)
}
bradleyterry.multid(1,1,id,lambda,dataset)
iterative.bt<-function(a,b,id,lambda,dataset, iterations){
for (i in 1:iterations){
lambda<-bradleyterry.multid(a,b,id,lambda,dataset)}
return(lambda)
}
current.code<-as.package("bradleyterry")
load_all(current.code)
document(current.code)
bradleyterry(1,1,1,lambda,dataset)
bradleyterry.multid(1,1,id,lambda,dataset)
iterative.bt(1,1,id,lambda,dataset,1)
iterative.bt(1,1,id,lambda,dataset,20)
library(ggplot2)
ggplot(boixmodel,aes(ethnic,threshold,
color=factor(area.dummy)))+
stat_smooth(method=lm)+geom_point()
boxcox(ozonemod, plotit=T, lambda=seq(.15,.45,by=.05))
library(car)
data(Angell)
angellmod<-lm(moral~hetero+mobility+region, Angell)
summary(angellmod)
trans1<-lm(moral~hetero+mobility+region,Angell)
trans_mobility<-(Angell$mobility^(-1.235031)-1/-1.235031)
trans2<-lm(moral~hetero+trans_mobility+region,Angell)
sigma<-c(summary(trans1)$sigma, summary(trans2)$sigma)
rsquared<-as.numeric(c(summary(trans1)$r.squared,
summary(trans2)$r.squared))
check<-t(data.frame(rbind(sigma,rsquared)))
check<-as.data.frame(check)
check #answer ***
library(faraway)
data(ozone)
ozonemod<-lm(O3~temp+humidity+ibh, ozone)
summary(ozonemod)
x<-model.matrix(ozonemod)[,-1]
require(MASS)
boxcox(ozonemod, plotit=T)
boxcox(ozonemod, plotit=T, lambda=seq(.15,.45,by=.05))
O3transformation<-(ozone$O3^.28-1)/.28
newozonemod<-lm(O3transformation~temp+humidity+ibh, ozone)
summary(newozonemod)
pairs(O3~temp+humidity+ibh, ozone)
pairs(O3transformation~temp+humidity+ibh, ozone)
inter.binning(Y="threshold",
D="parties",
X="socialism",
Z=c("threat","socialism","parties","area"),
Ylabel="Threshold",
Xlabel="socialism",
Dlabel="parties",
data=dat,  var = vartype)
install.packages("interflex")
package(interflex)
library(interflex)
inter.binning(Y="threshold",
D="parties",
X="socialism",
Z=c("threat","socialism","parties","area"),
Ylabel="Threshold",
Xlabel="socialism",
Dlabel="parties",
data=dat,  var = vartype)
library(readr)
boix_data <- read_csv("~/Desktop/QPM 1 Rosas/boix_data.csv")
arealogdata<-as.matrix(10^boix_data$area)
func<- function(x){if (x>450) {return(0)} else {return(1)}}
area.dummy<-apply(arealogdata,1,func)
fragarea<-area.dummy*boix_data$ethnic
lm(threshold~threat+fragarea, boix_data)
boixmodel<-lm(threshold~threat+area.dummy*ethnic, boix_data)
inter.binning(Y="threshold",
D="parties",
X="socialism",
Z=c("threat","socialism","parties","area"),
Ylabel="Threshold",
Xlabel="socialism",
Dlabel="parties",
data=boix_data,  var = vartype)
inter.binning(Y="threshold",
D="parties",
X="socialism",
Z=c("threat","socialism","parties","area"),
Ylabel="Threshold",
Xlabel="socialism",
Dlabel="parties",
data=boix_data)
inter.binning(Y="threshold",
D="parties",
X="socialism",
Z=c("threat","socialism","parties","area"),
Ylabel="Threshold",
Xlabel="socialism",
Dlabel="parties",
data=boix_data)
boix<-boix_data
boix$areadummy <- as.numeric((10^boix$area)<450)
boix_model<-lm(threshold~threat+
areadummy +ethnic+areadummy*ethnic,data=boix)
summary(boix_model) #answer:the correct model and regression outcomes ***
boix_model_wrong<-lm(threshold~threat
+(areadummy:ethnic),data=boix)
summary(boix_model_wrong) #wrong model by Boix
library(ggplot2)
library(interplot)
install.packages("interplot")
library(interplot)
interplot(m=boix_model,var1="ethnic",var2="areadummy")+
xlab("area_dummy")+
ylab('Estimated coeffcients of ethnic')+
ggtitle("Estimated coeffcients of ethnic on threshold")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
boix_data <- read_csv("~/Desktop/QPM 1 Rosas/boix_data.csv")
arealogdata<-as.matrix(10^boix_data$area)
func<- function(x){if (x>450) {return(0)} else {return(1)}}
area.dummy<-apply(arealogdata,1,func)
fragarea<-area.dummy*boix_data$ethnic
boixmodel<-lm(threshold~threat+fragarea, boix_data)
summary(boixmodel)
propermodel<-lm(threshold~threat+area.dummy*ethnic, boix_data)
summary(propermodel)
library(ggplot2)
library(interplot)
interplot(m=boix_model,var1="ethnic",var2="areadummy")+
xlab("area_dummy")+
ylab('Estimated coeffcients of ethnic')+
ggtitle("Estimated coeffcients of ethnic on threshold")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
library(interplot)
interplot(m=boix_model,var1="ethnic",var2="areadummy")+
xlab("area_dummy")+
ylab('Estimated coeffcients of ethnic')+
ggtitle("Estimated coeffcients of ethnic on threshold")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
ggplot(boix_model,aes(ethnic,threshold,
color=factor(areadummy)))+
ggtitle("The relationship between ethnic and threshold \nconditional on area dummy")+
stat_smooth(method=lm)+geom_point()+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
library(interplot)
interplot(m=boix_model,var1="ethnic",var2="areadummy")+
xlab("area_dummy")+
ylab('threshold')+
ggtitle("Correct interaction effects between area_dummy and ethnic")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
interplot(m=propermodel,var1="ethnic",var2="areadummy")+
xlab("area_dummy")+
ylab('Estimated coeffcients of ethnic')+
ggtitle("Estimated coeffcients of ethnic on threshold")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
interplot(m=propermodel,var1="ethnic",var2="area.dummy")+
xlab("area_dummy")+
ylab('Estimated coeffcients of ethnic')+
ggtitle("Estimated coeffcients of ethnic on threshold")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
interplot(m=propermodel,var1="ethnic",var2="area.dummy")+
xlab("Area dummy value")+
ylab('Ethnic coefficient estimate')+
ggtitle("Ethnic coefficient estimates on Threshold")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
library(readr)
boix_data <- read_csv("~/Desktop/QPM 1 Rosas/boix_data.csv")
arealogdata<-as.matrix(10^boix_data$area)
func<- function(x){if (x>450) {return(0)} else {return(1)}}
area.dummy<-apply(arealogdata,1,func)
fragarea<-area.dummy*boix_data$ethnic
boixmodel<-lm(threshold~threat+fragarea, boix_data)
summary(boixmodel)
library(ggplot2)
ggplot(boixmodel,aes(ethnic,threshold,
color=factor(area.dummy)))+
stat_smooth(method=lm)+geom_point()
interplot(m=propermodel,var1="ethnic",var2="area.dummy")+
xlab("Area dummy value")+
ylab('Ethnic coefficient estimate')+
ggtitle("Ethnic coefficient estimates on Threshold")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
ggplot(boix_model,aes(ethnic,threshold,
color=factor(areadummy)))+
ggtitle("The relationship between ethnic and threshold \nconditional on area dummy")+
stat_smooth(method=lm)+geom_point()+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(propermodel,aes(ethnic,threshold,
color=factor(area.dummy)))+
ggtitle("The relationship between ethnic and threshold \nconditional on area dummy")+
stat_smooth(method=lm)+geom_point()+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
library(interplot)
interplot(m=boix_model,var1="ethnic",var2="areadummy")+
xlab("area_dummy")+
ylab('threshold')+
ggtitle("Correct interaction effects between area_dummy and ethnic")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
ggplot(propermodel,aes(ethnic,threshold,
color=factor(area.dummy)))+
ggtitle("The relationship between ethnic and threshold \nconditional on area dummy")+
stat_smooth(method=lm)+geom_point()+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
interplot(m=propermodel,var1="ethnic",var2="area.dummy")+
xlab("Area dummy value")+
ylab('threshold')+
ggtitle("Effect of area on threshold conditional on ethnic")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
ggplot(propermodel,aes(ethnic,threshold,
color=factor(area.dummy)))+
ggtitle("Effect of ethnic on threshold conditional on area")+
stat_smooth(method=lm)+geom_point()+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
library(Hmisc) # cut2
install.packages("Hmisc")
cut2(boix_data$socialism, g=3)
library(Hmisc) # cut2
cut2(boix_data$socialism, g=3)
boix_data$socialbin<-as.numeric(cut2(boix_data$socialism, g=3))
boix_data$partiesbin<-as.numeric(cut2(boix_data$parties, g=3))
boix_model2_1<-lm(threshold~socialismbin+parties+area+socialismbin*parties,boix_data)
boix_data$socialismbin<-as.numeric(cut2(boix_data$socialism, g=3))
boix_data$partiesbin<-as.numeric(cut2(boix_data$parties, g=3))
boix_model2_1<-lm(threshold~socialismbin+parties+area+socialismbin*parties,boix_data)
boix_data$socialismbin<-as.numeric(cut2(boix_data$socialism, g=3))
boix_data$partiesbin<-as.numeric(cut2(boix_data$parties, g=3))
boix.socalismbin<-lm(threshold~socialismbin+parties+area+socialismbin*parties,boix_data)
boix.partiesbin-lm(threshold~partiesbin+socialism+area+partiesbin*socialism,boix_data)
boix_data$socialismbin<-as.numeric(cut2(boix_data$socialism, g=3))
boix_data$partiesbin<-as.numeric(cut2(boix_data$parties, g=3))
boix.socalismbin<-lm(threshold~socialismbin+parties+area+socialismbin*parties,boix_data)
boix.partiesbin-lm(threshold~partiesbin+socialism+area+partiesbin*socialism,boix_data)
interplot(m=boix.socalismbin,var1="parties",var2="socialismbin")+
xlab("three bins for socialism")+
geom_hline(yintercept = 0, linetype = "dashed")+
ylab('coefficients')+
ggtitle("Coefficients of parties on threshold conditional on socialism bin")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
library(interflex)
inter.binning(Y="threshold",
D="parties",
X="socialism",
Ylabel="Threshold",
Xlabel="socialism",
Dlabel="parties",
data=boix_data,  var = )
summary(newozonemod)
ozonemod<-lm(O3~temp+humidity+ibh, ozone)
summary(ozonemod)
interplot(m=boix.socalismbin,var1="parties",var2="socialismbin")+
xlab("Respectively: Low, Middle, High socialism bins")+
geom_hline(yintercept = 0, linetype = "dashed")+
ylab('coefficients')+
ggtitle("Parties effect on threshold conditional on socialism binning")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
library(car)
boxTidwell(Angell$moral,Angell$hetero) #answer ***
boxTidwell(Angell$moral,Angell$mobility) #answer ***
pairs(moral~hetero+mobility+region, Angell)
transformedhetero<-sqrt(Angell$hetero)
angellmod<-lm(moral~transformedhetero+mobility+region, Angell)
summary(newangellmod)
newangellmod<-lm(moral~transformedhetero+mobility+region, Angell)
summary(newangellmod)
angellmod<-lm(moral~hetero+mobility+region, Angell)
summary(angellmod)
pairs(moral~transformedhetero+mobility+region, Angell)
transformedhetero1<-log(Angell$hetero)
newangellmod1<-lm(moral~transformedhetero1+mobility+region, Angell)
summary(newangellmod1)
pairs(moral~transformedhetero1+mobility+region, Angell)
pairs(moral~transformedhetero1+mobility+region, Angell)
transhetero<-log(Angell$hetero)
newangellmod1<-lm(moral~transformedhetero1+mobility+region, Angell)
summary(newangellmod1)
pairs(moral~transhetero+mobility+region, Angell)
library(faraway)
data(ozone)
ozonemod<-lm(O3~temp+humidity+ibh, ozone)
summary(ozonemod)
boxcox(ozonemod, plotit=T)
boxcox(ozonemod, plotit=T, lambda=seq(.15,.45,by=.05))
O3transformation<-(ozone$O3^.28-1)/.28
newozonemod<-lm(O3transformation~temp+humidity+ibh, ozone)
summary(newozonemod)
pairs(O3~temp+humidity+ibh, ozone)
pairs(O3transformation~temp+humidity+ibh, ozone)
O3trans<-(ozone$O3^.28-1)/.28
newozonemod<-lm(O3trans~temp+humidity+ibh, ozone)
summary(newozonemod)
pairs(O3~temp+humidity+ibh, ozone)
pairs(O3trans~temp+humidity+ibh, ozone)
pairs(O3~temp+humidity+ibh, ozone)
pairs(O3trans~temp+humidity+ibh, ozone)
pairs(O3~temp+humidity+ibh, ozone)
pairs(O3trans~temp+humidity+ibh, ozone)
interplot(m=propermodel,var1="ethnic",var2="area.dummy")+
xlab("Area dummy value")+
ylab('threshold')+
ggtitle("Effect of area on threshold conditional on ethnic")+
theme_classic()+theme(plot.title = element_text(hjust = 0.5))
O3trans
(ozone$O3^(.28)-1)/.28
